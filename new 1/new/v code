<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>eVoucher System</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f5f5f5;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .panel {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }
        h1 {
            color: #2c3e50;
            text-align: center;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        input, button {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #3498db;
            color: white;
            border: none;
            cursor: pointer;
            font-size: 16px;
            margin-top: 10px;
        }
        button:hover {
            background-color: #2980b9;
        }
        .error {
            color: red;
            font-size: 14px;
            margin-top: 5px;
        }
        .success {
            color: green;
            font-size: 16px;
            margin-top: 15px;
            text-align: center;
        }
        .voucher {
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 4px;
            margin-top: 15px;
            border-left: 4px solid #3498db;
        }
        .voucher-list {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 15px;
            margin-top: 20px;
        }
        .payment-wall {
            background-color: #ff6600;
            color: white;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            text-align: center;
        }
        .logo {
            font-size: 2rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
        }
        .tab-container {
            display: flex;
            margin-bottom: 20px;
        }
        .tab {
            padding: 10px 20px;
            background-color: #ddd;
            cursor: pointer;
            margin-right: 5px;
            border-radius: 5px 5px 0 0;
        }
        .tab.active {
            background-color: #3498db;
            color: white;
        }
        .tab-content {
            display: none;
        }
        .tab-content.active {
            display: block;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="tab-container">
            <div class="tab active" onclick="openTab('admin')">Admin</div>
            <div class="tab" onclick="openTab('redemption')">Redemption</div>
        </div>
        
        <!-- Admin Tab -->
        <div id="admin" class="tab-content active">
            <div class="panel">
                <h1>Generate eVouchers</h1>
                <div class="form-group">
                    <label for="quantity">Number of Vouchers</label>
                    <input type="number" id="quantity" min="1" max="100" value="5">
                </div>
                <div class="form-group">
                    <label for="value">Value (¢)</label>
                    <input type="number" id="value" min="1" value="50">
                </div>
                <div class="form-group">
                    <label for="expiry">Expiry Date</label>
                    <input type="date" id="expiry">
                </div>
                <button onclick="generateVouchers()">Generate Vouchers</button>
                <div id="voucherResults" class="voucher-list"></div>
            </div>
        </div>
        
        <!-- Redemption Tab -->
        <div id="redemption" class="tab-content">
            <div class="payment-wall">
                <div class="logo">BENROCK COMPUTER TRAINING CENTRE</div>
                <div class="tagline">"Quality is Our Pride"</div>
            </div>
            
            <div class="panel">
                <h1>APPLICANT LOGIN</h1>
                <div class="form-group">
                    <label for="serial">Serial Number</label>
                    <input type="text" id="serial" placeholder="BNK-XXXX-XXXX">
                    <div id="serialError" class="error"></div>
                </div>
                <div class="form-group">
                    <label for="voucherPin">PIN Code</label>
                    <input type="password" id="voucherPin" placeholder="6-digit PIN">
                    <div id="pinError" class="error"></div>
                </div>
                <button onclick="redeemVoucher()">Submit</button>
                <div id="redeemResult" class="success"></div>
            </div>
        </div>
    </div>

    <script>
        // Tab System
        function openTab(tabName) {
            const tabs = document.getElementsByClassName('tab');
            const tabContents = document.getElementsByClassName('tab-content');
            
            for (let i = 0; i < tabs.length; i++) {
                tabs[i].classList.remove('active');
                tabContents[i].classList.remove('active');
            }
            
            document.getElementById(tabName).classList.add('active');
            event.currentTarget.classList.add('active');
        }
        
        // Voucher Generation Functions
        function randomChars(length) {
            const chars = 'ABCDEFGHJKLMNPQRSTUVWXYZ23456789';
            let result = '';
            for (let i = 0; i < length; i++) {
                result += chars.charAt(Math.floor(Math.random() * chars.length));
            }
            return result;
        }
        
        function randomPin(length) {
            const digits = '23456789';
            let result = '';
            for (let i = 0; i < length; i++) {
                result += digits.charAt(Math.floor(Math.random() * digits.length));
            }
            return result;
        }
        
        function generateVouchers() {
            const quantity = parseInt(document.getElementById('quantity').value);
            const value = parseFloat(document.getElementById('value').value);
            const expiry = document.getElementById('expiry').value;
            const resultsDiv = document.getElementById('voucherResults');
            
            resultsDiv.innerHTML = '';
            let vouchers = JSON.parse(localStorage.getItem('vouchers') || '[]');
            
            for (let i = 0; i < quantity; i++) {
                const serial = `BNK-${randomChars(4)}-${randomChars(4)}`;
                const pin = randomPin(6);
                const expiryDate = expiry || 'No expiry';
                
                // Store voucher
                vouchers.push({
                    serial,
                    pin,
                    value,
                    expiry: expiryDate,
                    redeemed: false,
                    generatedOn: new Date().toISOString()
                });
                
                // Display voucher
                const voucherDiv = document.createElement('div');
                voucherDiv.className = 'voucher';
                voucherDiv.innerHTML = `
                    <p><strong>Voucher #${vouchers.length}</strong></p>
                    <p>Serial: <strong>${serial}</strong></p>
                    <p>PIN: <strong>${pin}</strong></p>
                    <p>Value: ¢${value.toFixed(2)}</p>
                    <p>Expires: ${expiryDate}</p>
                    <button onclick="copyToClipboard('${serial}', '${pin}')">Copy Details</button>
                `;
                resultsDiv.appendChild(voucherDiv);
            }
            
            localStorage.setItem('vouchers', JSON.stringify(vouchers));
            alert(`${quantity} vouchers generated and stored!`);
        }
        
        // Voucher Redemption Functions
        function redeemVoucher() {
            const serial = document.getElementById('serial').value.trim().toUpperCase();
            const pin = document.getElementById('voucherPin').value.trim();
            const resultDiv = document.getElementById('redeemResult');
            
            // Clear previous messages
            document.getElementById('serialError').textContent = '';
            document.getElementById('pinError').textContent = '';
            resultDiv.textContent = '';
            
            // Validation
            if (!/^BNK-[A-Z0-9]{4}-[A-Z0-9]{4}$/.test(serial)) {
                document.getElementById('serialError').textContent = 'Invalid serial format (BNK-XXXX-XXXX)';
                return;
            }
            
            if (!/^\d{6}$/.test(pin)) {
                document.getElementById('pinError').textContent = 'PIN must be 6 digits';
                return;
            }
            
            // Check against stored vouchers
            const vouchers = JSON.parse(localStorage.getItem('vouchers') || []);
            const voucherIndex = vouchers.findIndex(v => 
                v.serial === serial && 
                v.pin === pin
            );
            
            if (voucherIndex === -1) {
                resultDiv.textContent = 'Invalid voucher or PIN';
                resultDiv.style.color = 'red';
                return;
            }
            
            const voucher = vouchers[voucherIndex];
            
            // Check expiry
            if (voucher.expiry !== 'No expiry' && new Date(voucher.expiry) < new Date()) {
                resultDiv.innerHTML = 'Voucher has expired';
                resultDiv.style.color = 'red';
                return;
            }
            
            // Check if already redeemed
            if (voucher.redeemed) {
                resultDiv.innerHTML = 'Voucher already redeemed';
                resultDiv.style.color = 'red';
                return;
            }
            
            // Redeem voucher
            vouchers[voucherIndex].redeemed = true;
            vouchers[voucherIndex].redeemedOn = new Date().toISOString();
            localStorage.setItem('vouchers', JSON.stringify(vouchers));
            
            // Immediately redirect to qwerty new.html
            window.location.href = "qwerty new.html";
            
            // Clear form
            document.getElementById('serial').value = '';
            document.getElementById('voucherPin').value = '';
        }
        
        // Utility Functions
        function copyToClipboard(serial, pin) {
            navigator.clipboard.writeText(`Serial: ${serial}\nPIN: ${pin}`);
            alert('Voucher details copied to clipboard!');
        }
    </script>
</body>
</html>